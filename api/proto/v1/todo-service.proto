syntax = "proto3";

package v1;

import "google/protobuf/timestamp.proto";

message Todo {
    // Unique interger identify Todo task.    
    int64 id = 1;
    
    // Title of the task
    string title = 2;

    // Task description
    string description = 3;

    // Check whether task is done yet.
    bool done = 4;

    // Date and time to remind the task
    google.protobuf.Timestamp reminder = 5;

    // Task created date and time
    google.protobuf.Timestamp creted_at = 6;

    // Task updated date and time
    google.protobuf.Timestamp updated_at = 7;
}

message CreateRequest {
    // API versioning
    string API = 1;

    // Task entity to add
    Todo todo = 2;
}

message CreateResponse {
    // API versioning
    string API = 1;

    // Created task id
    int64 id = 2;
}

message ReadRequest {
    // API versioning
    string API = 1;

    // The task id to read
    int64 id = 2;
}

message ReadResponse {
    // API versioning
    string API = 1;
    
    // Return Task entity
    Todo todo = 2;
}

message UpdateRequest {
    // API versioning
    string API = 1;
    
    // Task entity to update
    Todo todo = 2;
}

message UpdateResponse {
    // API versioning
    string API = 1;

    // Return the number of entity updated
    int64 updated = 2;
}

message DeleteRequest {
    // API versioning
    string API = 1;

    // Entity Id to delete
    int64 id = 2;
}

message DeleteResponse {
    // API versioning
    string API = 1;
    
    // Status return whether the entity is deleted
    int64 deleted = 2;
}

message ReadAllRequest {
    // API versioning
    string API = 1;
}

message ReadAllResponse {
    // API versioning
    string API = 1;

    // Return all the task
    repeated Todo todo = 2;
}

service TodoService {
    // Create Todo
    rpc Create (CreateRequest) returns (CreateResponse);

    // Read Todo
    rpc Read (ReadRequest) returns (ReadResponse);

    // Update Todo
    rpc Update (UpdateRequest) returns (UpdateResponse);

    // Delete Todo
    rpc Delete (DeleteRequest) returns (DeleteResponse);

    // Read all Todo tasks
    rpc ReadAll (ReadAllRequest) returns (ReadAllResponse);
}